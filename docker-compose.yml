services:
  db:
    image: postgres:17.4-alpine
    container_name: flask-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      flasknet:
        ipv4_address: 172.20.0.10
    cpus: 2.0

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-api
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/flask_app_db
      FLASK_RUN_HOST: 0.0.0.0
      FLASK_APP: run.py
      DEBUG: 0
      TESTING: 0
      PROMETHEUS_MULTIPROC_DIR: /tmp/prometheus_multiproc_dir
    ports:
      - "${FLASK_PORT}:5000"
    volumes:
      - ./.flask-docker/logs:/app/logs
      - ./.monitoring/prometheus_multiproc:/tmp/prometheus_multiproc_dir
    networks:
      flasknet:
        ipv4_address: 172.20.0.11
    cpus: 6.0

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./.monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      flasknet:
        ipv4_address: 172.20.0.5  # Fixed IP for filtering in Flask

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      flasknet:
        ipv4_address: 172.20.0.6
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  db-data:
  grafana-data:

networks:
  flasknet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
